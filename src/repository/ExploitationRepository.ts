import { Exploitation } from "../models";

export class ExploitationRepository {

  public static getAll() {
    return new Promise((resolve, reject) => {
      Exploitation.model.findAll({
        attributes: ["id", "nom"]
      }).then((result) => {
        // If result is null or undefined, send an empty array.
        result = result ? result : [];
        console.info(`[Exploitation:getAll] All Exploitation size : ${result.length}`);
        resolve(result);
      }).catch((error) => {
        console.error("[Exploitation:getAll]", error);
        reject(error);
      });
    });
  }

  public static getById(id: number) {
    return new Promise((resolve, reject) => {
      if (id !== null && id !== undefined && !isNaN(Number(id))) {
        Exploitation.model.findOne({ where: { id } }).then((exploitation) => {
          if (exploitation) {
            console.info(`[Exploitation:getById] Get Exploitation ${exploitation.nom}`);
            resolve(exploitation);
          } else {
            resolve(null);
          }
        }).catch((error) => {
          console.error("[Exploitation:getById]", error);
          reject(error);
        });
      } else {
        resolve(null);
      }
    });
  }
}
